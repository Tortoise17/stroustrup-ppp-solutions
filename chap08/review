1. What is the difference between a declaration and a definition?
    A declaration introduces a name into a scope.
    A definition fully specifies the declared entity and sets aside memory for it

2. How do we syntactically distinguish between a function declaration
and a function definition?
    Dec: void print(int x, string y);
    Definition: 
        void print(int x, string y) { cout << x << " " << y << "\n"; }

3. How do we syntactically distinguish between a variable declaration
and a variable definition?
    Dec: int x;
    Def: int x = 99;

4. Why canâ€™t you use the functions in the calculator program from
Chapter 6 without declaring them first?
    The functions were not introduced in the scope and compiler was not aware of
    the functions referred to by the caller.

5. Is int a; a definition or just a declaration?
    Declaration

6. Why is it a good idea to initialize variables as they are declared?
    Uninitialized variables give undefined behaviour

7. What can a function declaration consist of?
    Return type, Parameters and their types

8. What good does indentation do?
    Makes code clearer to understand

9. What are header files used for?
    Declaring functions and variables before use so the compiler is aware 
    that they will be used later

10. What is the scope of a declaration?
    The start of the scope till its end.

11. What kinds of scope are there? Give an example of each.
    Global Scope: outside any scope
        #include <iostream>
        const double global_pi = 3.14159; 
        int main() {}

    Namespace Scope: Valid inside Namespace
        namespace X {
            int my_namespace_var = 20;
        }

    Class Scope: Within Class
        class X {
            public:
                void print(int x) {
                    cout << x;
                }
        }
    
    Local Scope: Between code blocks {} or in function argument list
        {
            int local_x = 1;
        }

    Statement Scope: Scope of a Statement
        for(int i = 0; i < 100; i++) cout << "Local i: " << i; 

12. What is the difference between a class scope and local scope?
    Within Class Object; Surrounded by {} inside a codeblock

13. Why should a programmer minimize the number of global variables?
    Prevents reading and writing of global variables unknowingly inside program

14. What is the difference between pass-by-value and pass-by-reference?
    Val: copies parameter value to function
    Reference: Gives function address of variable instead of copying its value

15. What is the difference between pass-by-reference and pass-byconst-reference?
    Allows modification of reference value;
    Doesnt allow modification of referenced variable

16. What is a swap()?
    Standard function to swap values of 2 variables

17. Would you ever define a function with a vector<double>-by-value
parameter?
    Only if vector size is minimal

18. Give an example of undefined order of evaluation. Why can
undefined order of evaluation be a problem?
    Reading and writing value of variable in an expression
    v[i] = i++;
    Can lead to out of bounds error

19. What do x&&y and x||y, respectively, mean?
    Returns true when both x and y are true
    Returns true when either x or y are true

20. Which of the following is standard-conforming C++: functions
within functions, functions within classes, classes within classes,
classes within functions?
    Functions within classes

21. What goes into an activation record?
    Information required by function to return to its caller and return a value
    to its caller.

22.  What is a call stack and why do we need one?
    A data structure storing Information about the trace of functions one 
    after the other.

    Tells use where the issue occurred and what was the original call.

23. What is the purpose of a namespace?
    Structure to organize classes, functions, data and types together

24. How does a namespace differ from a class?
    Classes are a data structure.
    Namespaces declare a scope and group similar classes, functions etc.

25. What is a using declaration?
    Referring to classes, functions and variables in a namespace without fully qualified name

26. Why should you avoid using directives in a header?
    Leads to clashes

27. What is namespace std?
    Using directive for standard library namespace
